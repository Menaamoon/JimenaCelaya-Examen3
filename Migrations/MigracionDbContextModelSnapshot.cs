// <auto-generated />
using System;
using JimenaCelaya_Examen3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JimenaCelaya_Examen3.Migrations
{
    [DbContext(typeof(MigracionDbContext))]
    partial class MigracionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.EntradaSalida", b =>
                {
                    b.Property<int>("IDRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRegistro"));

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDViajero")
                        .HasColumnType("int");

                    b.Property<string>("LugarEntrada")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LugarSalida")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDRegistro");

                    b.HasIndex("IDViajero");

                    b.ToTable("EntradasSalidas");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Pais", b =>
                {
                    b.Property<int>("IDPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPais"));

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Viajero", b =>
                {
                    b.Property<int>("IDViajero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDViajero"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroPasaporte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDViajero");

                    b.ToTable("Viajeros");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Visa", b =>
                {
                    b.Property<int>("IDVisa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDVisa"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPais")
                        .HasColumnType("int");

                    b.Property<int>("IDViajero")
                        .HasColumnType("int");

                    b.HasKey("IDVisa");

                    b.HasIndex("IDPais");

                    b.HasIndex("IDViajero");

                    b.ToTable("Visas");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.EntradaSalida", b =>
                {
                    b.HasOne("JimenaCelaya_Examen3.Models.Viajero", "Viajero")
                        .WithMany("EntradasSalidas")
                        .HasForeignKey("IDViajero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Visa", b =>
                {
                    b.HasOne("JimenaCelaya_Examen3.Models.Pais", "Pais")
                        .WithMany("Visas")
                        .HasForeignKey("IDPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JimenaCelaya_Examen3.Models.Viajero", "Viajero")
                        .WithMany("Visas")
                        .HasForeignKey("IDViajero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Pais", b =>
                {
                    b.Navigation("Visas");
                });

            modelBuilder.Entity("JimenaCelaya_Examen3.Models.Viajero", b =>
                {
                    b.Navigation("EntradasSalidas");

                    b.Navigation("Visas");
                });
#pragma warning restore 612, 618
        }
    }
}
